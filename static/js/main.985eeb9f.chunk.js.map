{"version":3,"sources":["service/api/baseUrl.js","components/Login.js","components/Register.js","components/ContactItem.js","container/Contacts.js","components/Message.js","container/Chat.js","container/Main.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","Login","useState","username","setUsername","password","setPassword","navigate","useNavigate","className","initialValues","rememberMe","type","placeholder","value","onChange","e","target","htmlFor","name","onClick","preventDefault","post","then","res","console","log","data","token","localStorage","setItem","JSON","stringify","replace","window","location","reload","catch","err","to","Register","schema","Yup","shape","required","min","repeatPassword","oneOf","email","handleRegister","values","a","alert","validationSchema","onSubmit","errors","touched","ContactItem","contactName","lastMessage","setLastMessage","avatar","setAvatar","user","parse","getItem","useEffect","user1","user2","length","lastPM","message","get","src","alt","rightPart","document","getElementById","leftPart","classList","add","Contacts","contactRef","useRef","contacts","setContacts","contactInput","setContactInput","isAddContact","setIsAddContact","IconButton","color","removeItem","action","ref","hideScrollbars","map","contact","_id","Message","receiver","timestamp","msg","params","useParams","Chat","chatInput","setChatInput","msgList","setMsgList","channel","Pusher","cluster","subscribe","bind","newMessage","unbind_all","unsubscribe","id","backButton","chatHeader","remove","list","index","senderName","receiverName","moment","format","Main","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.985eeb9f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n\tbaseURL: 'https://rcmessneger.herokuapp.com/api',\r\n})\r\n\r\nexport default api\r\n","import React, { useState } from 'react'\r\nimport './styles/Login.scss'\r\nimport { Formik } from 'formik'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport axios from '../service/api/baseUrl'\r\nfunction Login() {\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tlet navigate = useNavigate()\r\n\tconst handleLogin = (e) => {\r\n\t\te.preventDefault()\r\n\t\taxios\r\n\t\t\t.post('/account/login', { username, password })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tif (res.data.token) {\r\n\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(res.data))\r\n\t\t\t\t\tnavigate('/messenger', { replace: true })\r\n\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='login'>\r\n\t\t\t<div className='login__title'>\r\n\t\t\t\t<h3>Hi Lets get started</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='login__content'>\r\n\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tusername: '',\r\n\t\t\t\t\t\tpassword: '',\r\n\t\t\t\t\t\trememberMe: false,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<form className='login__form'>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tclassName='form-control login__input'\r\n\t\t\t\t\t\t\tplaceholder='username'\r\n\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tclassName='form-control login__input'\r\n\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='form-check login__checkbox'>\r\n\t\t\t\t\t\t\t<label htmlFor='remember' className='form-check-label'>\r\n\t\t\t\t\t\t\t\tremember my login\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tname='rememberMe'\r\n\t\t\t\t\t\t\t\tclassName='form-check-input '\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className='btn btn-primary' onClick={handleLogin}>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<div className='login__footer'>\r\n\t\t\t\t\t<Link to='/account/register'>\r\n\t\t\t\t\t\t<h3>create an account</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './styles/Register.scss'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from 'yup'\r\nimport axios from '../service/api/baseUrl'\r\nimport { useNavigate } from 'react-router'\r\nfunction Register() {\r\n\tlet navigate = useNavigate()\r\n\tconst schema = Yup.object().shape({\r\n\t\tusername: Yup.string()\r\n\t\t\t.required('Username required')\r\n\t\t\t.min(6, 'username should be atleast 6 character'),\r\n\t\tpassword: Yup.string()\r\n\t\t\t.required('Password required')\r\n\t\t\t.min(8, 'password should be 8 character'),\r\n\t\trepeatPassword: Yup.string().oneOf(\r\n\t\t\t[Yup.ref('password'), null],\r\n\t\t\t'Passwords must match'\r\n\t\t),\r\n\t\temail: Yup.string().email('this is not in email format').required(),\r\n\t})\r\n\tconst handleRegister = async (values) => {\r\n\t\tawait axios\r\n\t\t\t.post('/account/register', {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\temail: values.email,\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert('you succesfully registred')\r\n\t\t\t\tnavigate('/', { replace: true })\r\n\t\t\t})\r\n\t\t\t.catch((err) => alert(err))\r\n\t}\r\n\treturn (\r\n\t\t<div className='register'>\r\n\t\t\t<div className='register__title'>\r\n\t\t\t\t<h3>Hi Lets get started</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='register__content'>\r\n\t\t\t\t<h3>Register</h3>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tusername: '',\r\n\r\n\t\t\t\t\t\temail: '',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalidationSchema={schema}\r\n\t\t\t\t\tonSubmit={handleRegister}>\r\n\t\t\t\t\t{({ errors, touched }) => (\r\n\t\t\t\t\t\t<Form className='register__form'>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tplaceholder='username'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{touched.username && errors.username && (\r\n\t\t\t\t\t\t\t\t<p className='text-danger'>{errors.username}</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{touched.password && errors.password && (\r\n\t\t\t\t\t\t\t\t<p className='text-danger'>{errors.password}</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname='repeatPassword'\r\n\t\t\t\t\t\t\t\tplaceholder='repeat password'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{touched.repeatPassword && errors.repeatPassword && (\r\n\t\t\t\t\t\t\t\t<p className='text-danger'>{errors.repeatPassword}</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* If this field has been touched, and it contains an error, display\r\n\r\n           it */}\r\n\r\n\t\t\t\t\t\t\t{touched.email && errors.email && (\r\n\t\t\t\t\t\t\t\t<p className='text-danger'>{errors.email}</p>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<button type='submit' className='btn btn-danger'>\r\n\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t\t{/* <Formik\r\n\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\tusername: '',\r\n\t\t\t\t\t\temail: '',\r\n\t\t\t\t\t\tpassword: '',\r\n\t\t\t\t\t\trepeatPassword: '',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalidationSchema={schema}\r\n\t\t\t\t\tvalidateOnChange={schema}\r\n\t\t\t\t\tonSubmit={(values) => {\r\n\t\t\t\t\t\t// same shape as initial values\r\n\r\n\t\t\t\t\t\tconsole.log(values)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{({ errors, touched }) => (\r\n\t\t\t\t\t\t<Form className='register__form'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tplaceholder='username'\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tautoComplete='new-password'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{errors.username && touched.username && (\r\n\t\t\t\t\t\t\t\t<label htmlFor='username'>{errors.username}</label>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tautoComplete='new-password'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{errors.password && touched.password && (\r\n\t\t\t\t\t\t\t\t<label htmlFor='password'>{errors.password}</label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tplaceholder='repeat password'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tname='repeatPassword'\r\n\t\t\t\t\t\t\t\tautoComplete='new-password'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{errors.repeatPassword && touched.repeatPassword && (\r\n\t\t\t\t\t\t\t\t<label htmlFor='repeatPassword'>{errors.repeatPassword}</label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\tclassName='form-control register__input'\r\n\t\t\t\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{errors.email && touched.email && (\r\n\t\t\t\t\t\t\t\t<label htmlFor='email'>{errors.email}</label>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='btn btn-danger'\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik> */}\r\n\t\t\t\t<div className='register__footer'>\r\n\t\t\t\t\t<Link to='/account/login'>\r\n\t\t\t\t\t\t<h3>sign in</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Register\r\n","import React, { useState, useEffect } from 'react'\r\nimport './styles/ContactItem.scss'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from '../service/api/baseUrl'\r\n\r\nfunction ContactItem({ contactName }) {\r\n\tlet navigate = useNavigate()\r\n\tconst [lastMessage, setLastMessage] = useState('')\r\n\tconst [avatar, setAvatar] = useState('')\r\n\tconst user = JSON.parse(localStorage.getItem('user'))\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.post('/message/sync', {\r\n\t\t\t\tuser1: user.username,\r\n\t\t\t\tuser2: contactName,\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst length = res.data.length\r\n\t\t\t\tconst lastPM = res.data[length - 1]\r\n\t\t\t\treturn setLastMessage(lastPM.message)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}, [])\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`/account/${contactName}`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { avatar } = res.data\r\n\t\t\t\treturn setAvatar(avatar)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}, [])\r\n\tconst handleClick = () => {\r\n\t\tlet rightPart = document.getElementById('right')\r\n\t\tlet leftPart = document.getElementById('left')\r\n\t\t// let backButton = document.getElementById('backButton');\r\n\t\t// let chatHeader = document.getElementById('chatHeader');\r\n\t\t// mainPart.style.flexDirection = 'column';\r\n\t\trightPart.classList.add('right__click')\r\n\t\tleftPart.classList.add('left__click')\r\n\t\t// backButton.classList.add('buttonShow');\r\n\t\t// chatHeader.classList.add('show');\r\n\t}\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='contactItem'\r\n\t\t\tonClick={() => {\r\n\t\t\t\tnavigate(`/${contactName}`)\r\n\t\t\t}}>\r\n\t\t\t<div className='contactItem__avatar'>\r\n\t\t\t\t{' '}\r\n\t\t\t\t{avatar ? <img src={avatar} alt='' /> : <PersonIcon />}{' '}\r\n\t\t\t</div>{' '}\r\n\t\t\t<div className='contactItem__msg' onClick={handleClick}>\r\n\t\t\t\t<h5> {contactName} </h5> <p> {lastMessage} </p>{' '}\r\n\t\t\t</div>{' '}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ContactItem\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport ContactItem from '../components/ContactItem'\r\nimport './styles/Contacts.scss'\r\n// import PersonIcon from '@mui/icons-material/Person'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd'\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n// import { useParams } from 'react-router-dom'\r\nimport axios from '../service/api/baseUrl'\r\nfunction Contacts() {\r\n\t// let params = useParams()\r\n\tconst contactRef = useRef()\r\n\tconst [contacts, setContacts] = useState([])\r\n\tconst [contactInput, setContactInput] = useState('')\r\n\tconst [isAddContact, setIsAddContact] = useState(false)\r\n\tconst user = JSON.parse(localStorage.getItem('user'))\r\n\tconst logout = () => {\r\n\t\tlocalStorage.removeItem('user')\r\n\t\twindow.location.reload()\r\n\t}\r\n\tconst hanldeAddContact = (e) => {\r\n\t\te.preventDefault()\r\n\t\taxios\r\n\t\t\t.post(`/account/contacts/${user.username}`, { contactName: contactInput })\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert('Contact added')\r\n\t\t\t\twindow.location.reload()\r\n\t\t\t})\r\n\t\t\t.catch((err) => alert(err))\r\n\t\tsetIsAddContact(false)\r\n\t}\r\n\t// getting contact from api\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`/account/contacts/${user.username}`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetContacts(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='contacts'>\r\n\t\t\t<div className='contacts__header'>\r\n\t\t\t\t<div className='contacts__selfInfo'>\r\n\t\t\t\t\t<img className='contacts_selfInfoImage' src={user.avatar} alt='' />\r\n\t\t\t\t\t<p className='contacts_selfInfoName'>{user.username}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='contacts__selfOptions'>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetIsAddContact(true)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<PersonAddIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton color='inherit'>\r\n\t\t\t\t\t\t<SettingsIcon className='settingsIcon' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton color='inherit' onClick={logout}>\r\n\t\t\t\t\t\t<LogoutIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{isAddContact && (\r\n\t\t\t\t<div className='contacts__contactInput'>\r\n\t\t\t\t\t<IconButton color='inherit' onClick={() => setIsAddContact(false)}>\r\n\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<form action=''>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='contact name'\r\n\t\t\t\t\t\t\tvalue={contactInput}\r\n\t\t\t\t\t\t\tref={contactRef}\r\n\t\t\t\t\t\t\tonChange={(e) => setContactInput(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button type='submit' onClick={hanldeAddContact}></button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<ScrollContainer className='contacts__content' hideScrollbars={false}>\r\n\t\t\t\t{contacts.map((contact) => (\r\n\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\tkey={contact._id}\r\n\t\t\t\t\t\tcontactName={contact.name}\r\n\t\t\t\t\t\tavatar={''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ScrollContainer>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport './styles/Message.scss'\r\nimport { useParams } from 'react-router'\r\nfunction Message({ receiver, timestamp, msg }) {\r\n\tlet params = useParams()\r\n\t// 'siamak' haman username login shode khahad bod\r\n\tconst user = JSON.parse(localStorage.getItem('user'))\r\n\treturn receiver !== user.username ? (\r\n\t\t<div className='msg'>\r\n\t\t\t<div className='bubble alt'>\r\n\t\t\t\t<div className='txt'>\r\n\t\t\t\t\t<div className='txt__wrap'>\r\n\t\t\t\t\t\t<span className='name alt'>{user.username}</span>\r\n\t\t\t\t\t\t<span className='timestamp'>{timestamp}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<p className='message'>{msg}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='bubble-arrow alt'></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className='msg'>\r\n\t\t\t<div className='bubble'>\r\n\t\t\t\t<div className='txt'>\r\n\t\t\t\t\t<div className='txt__wrap'>\r\n\t\t\t\t\t\t<span className='name'>{params.user}</span>\r\n\t\t\t\t\t\t<span className='timestamp'>{timestamp}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className='message'>{msg}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='bubble-arrow'></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message\r\n","import React, { useEffect, useState } from 'react'\r\nimport './styles/Chat.scss'\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport TelegramIcon from '@mui/icons-material/Telegram'\r\nimport moment from 'moment'\r\nimport Message from '../components/Message'\r\nimport { useParams } from 'react-router'\r\nimport axios from '../service/api/baseUrl'\r\nimport Pusher from 'pusher-js'\r\nfunction Chat() {\r\n\tlet params = useParams()\r\n\tconst [chatInput, setChatInput] = useState('')\r\n\tconst [msgList, setMsgList] = useState([])\r\n\tconst [avatar, setAvatar] = useState('')\r\n\tconst user = JSON.parse(localStorage.getItem('user'))\r\n\tconst handleInput = (e) => {\r\n\t\tsetChatInput(e.target.value)\r\n\t}\r\n\tconst handleSend = (e) => {\r\n\t\te.preventDefault()\r\n\t\taxios\r\n\t\t\t.post('/message/send', {\r\n\t\t\t\tsenderName: user.username,\r\n\t\t\t\treceiverName: params.user,\r\n\t\t\t\tmessage: chatInput,\r\n\t\t\t\ttimestamp: moment().format('LLL'),\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err))\r\n\t\tsetMsgList([\r\n\t\t\t...msgList,\r\n\t\t\t{\r\n\t\t\t\tname: user.username,\r\n\t\t\t\ttimestamp: moment().format('LLL'),\r\n\t\t\t\tmessage: chatInput,\r\n\t\t\t\treceiver: params.user,\r\n\t\t\t},\r\n\t\t])\r\n\t\tsetChatInput('')\r\n\t}\r\n\tconst handleClick = () => {\r\n\t\tlet rightPart = document.getElementById('right')\r\n\t\tlet leftPart = document.getElementById('left')\r\n\t\tlet backButton = document.getElementById('backButton')\r\n\t\tlet chatHeader = document.getElementById('chatHeader')\r\n\t\t// mainPart.style.flexDirection = 'column';\r\n\t\trightPart.classList.remove('right__click')\r\n\t\tleftPart.classList.remove('left__click')\r\n\t\tbackButton.classList.remove('buttonShow')\r\n\t\tchatHeader.classList.remove('show')\r\n\t}\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.post('/message/sync', { user1: user.username, user2: params.user })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMsgList(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err))\r\n\t}, [params])\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(`/account/${params.user}`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { avatar } = res.data\r\n\t\t\t\treturn setAvatar(avatar)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}, [params])\r\n\tuseEffect(() => {\r\n\t\tvar pusher = new Pusher('eba934b1dbc8ba404bcb', {\r\n\t\t\tcluster: 'eu',\r\n\t\t})\r\n\r\n\t\tconst channel = pusher.subscribe('messages')\r\n\t\tchannel.bind('updated', function (newMessage) {\r\n\t\t\taxios\r\n\t\t\t\t.post('/message/sync', { user1: user.username, user2: params.user })\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetMsgList(res.data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log(err))\r\n\t\t\tconsole.log('hello')\r\n\t\t})\r\n\t\treturn () => {\r\n\t\t\tchannel.unbind_all()\r\n\t\t\tchannel.unsubscribe()\r\n\t\t}\r\n\t}, [msgList])\r\n\treturn (\r\n\t\t<div className='chat'>\r\n\t\t\t<div className='chat__header' id='chatHeader'>\r\n\t\t\t\t<div className='chat__headerLeftPart'>\r\n\t\t\t\t\t{/* backToContacts */}\r\n\t\t\t\t\t<ArrowBackIosNewIcon id='backButton' onClick={handleClick} />\r\n\r\n\t\t\t\t\t{/* avatar */}\r\n\t\t\t\t\t<div className='chat__contactAvatar'>\r\n\t\t\t\t\t\t{avatar ? <img src={avatar} alt='' /> : <PersonIcon />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='chat__headerRightPart'>\r\n\t\t\t\t\t<h2>{params.user}</h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='chat__content'>\r\n\t\t\t\t{/* chat part */}\r\n\t\t\t\t<div className='chat__contentPart'>\r\n\t\t\t\t\t{msgList.map((list, index) => (\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\treceiver={list.receiver}\r\n\t\t\t\t\t\t\ttimestamp={list.timestamp}\r\n\t\t\t\t\t\t\tmsg={list.message}\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* chat input */}\r\n\r\n\t\t\t\t<form className='chat__contentInput' onSubmit={handleSend}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tclassName='chat__input'\r\n\t\t\t\t\t\tvalue={chatInput}\r\n\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type='submit'>\r\n\t\t\t\t\t\t<TelegramIcon />{' '}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n","import React, { useState, useEffect } from 'react'\r\nimport './styles/Main.scss'\r\nimport { Navigate } from 'react-router-dom'\r\nimport Contacts from './Contacts'\r\nimport Chat from './Chat'\r\nimport { useParams } from 'react-router-dom'\r\nfunction Main() {\r\n\tlet params = useParams()\r\n\tconst user = JSON.parse(localStorage.getItem('user'))\r\n\r\n\tif (!user) {\r\n\t\treturn <Navigate to='/messenger/account/login' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='main' id='main'>\r\n\t\t\t{/* left part for contacts  */}\r\n\t\t\t<div className='main__left' id='left'>\r\n\t\t\t\t<Contacts />\r\n\t\t\t</div>\r\n\t\t\t{/* right part for chat room */}\r\n\t\t\t<div className='main__right' id='right'>\r\n\t\t\t\t{params.user ? <Chat /> : <h1>select a chat to start</h1>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Main\r\n","import './App.scss'\nimport { useEffect } from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Login from './components/Login'\nimport Register from './components/Register'\n\nimport Main from './container/Main'\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className='app'>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path='/messenger' element={<Main />}>\n\t\t\t\t\t\t<Route path={`/messenger/:user`} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/messenger/account/login' element={<Login />} />\n\t\t\t\t\t<Route path='/messenger/account/register' element={<Register />} />\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}